{"version":3,"sources":["src/CompletionTriggers/CompletionTrigger.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb;;;;;;GAMG;AACH,MAAsB,iBAAiB;IAErC;;;;;OAKG;IACH,YACY,UAAU,IAAI,EACd,iBAAiB,8BAA8B;QAD/C,YAAO,GAAP,OAAO,CAAO;QACd,mBAAc,GAAd,cAAc,CAAiC;IACxD,CAAC;CAYL;AAvBD,8CAuBC","file":"CompletionTrigger.js","sourcesContent":["'use strict';\n\n/**\n * Defines a trigger that signifies page render completion.\n *\n * @export\n * @abstract\n * @class CompletionTrigger\n */\nexport abstract class CompletionTrigger {\n\n  /**\n   * Creates an instance of CompletionTrigger.\n   * @param {number} [timeout=1000] milliseconds until timing out.\n   * @param {string} [timeoutMessage='CompletionTrigger timed out.'] The timeout message.\n   * @memberof CompletionTrigger\n   */\n  constructor(\n    protected timeout = 1000,\n    protected timeoutMessage = 'CompletionTrigger timed out.',\n  ) {}\n\n  /**\n   * Abstracts away the trigger logic.\n   *\n   * @abstract\n   * @param {*} client the Chrome connection information.\n   * @returns {Promise<any>} resolves if triggered, rejects on error or timeout.\n   * @memberof CompletionTrigger\n   */\n  public abstract async wait(client: any): Promise<any>;\n\n}\n"],"sourceRoot":"../../.."}